plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

// messy workaround for bug in quilt loom 1.3.3+
project.configurations.configureEach {
    exclude(group: "net.fabricmc", module: "fabric-loader")
    exclude(group: "net.fabricmc.fabric-api")
}

def javaVersion = 17

group = project.maven_group_id

def ENV = System.getenv()
def NOW = new Date();
def buildTime = ENV.BUILD_TIME ?: NOW.format('yyyyMMddHHmmss')

boolean isPreviewBuild = !ENV.TAG || ENV.TAG.matches(".+-.+")
def buildNumber = !ENV.TAG ? ("${ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : buildTime}") : ""
version = (ENV.TAG ?: "${libs.versions.minecraft.get()}-development") + ((isPreviewBuild && !ENV.TAG) ? "+${buildNumber}" : "")

base {
	archivesName = "${rootProject.name}-Quilt"
}

repositories {
	mavenCentral()
	maven {
		name = "Gegy"
		url = "https://maven.gegy.dev"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = "ParchmentMC"
		url = "https://maven.parchmentmc.org"
		content {
			includeGroupByRegex "org\\.parchmentmc(\\..*)?"
		}
	}
}

loom {
	mods {
		"${project.mod_id}" {
			sourceSet("main")
		}
	}
	mixin {
        defaultRefmapName.set("${project.mod_id}.refmap.json")
    }
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings(loom.layered {
		it.parchment("${libs.parchment.mappings.get()}@zip")
		it.officialMojangMappings()
	})
	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	modCompileOnly libs.modmenu
	modLocalRuntime libs.modmenu

	modImplementation libs.libzoomer
	include libs.libzoomer

	modImplementation libs.spruceui
	include libs.spruceui
}

processResources {
	filteringCharset "UTF-8"

	def expandProps = [
		"version"                       : version,
		"maven_group_id"                : maven_group_id,
		"mod_id"                        : mod_id,
		"minecraft_version"             : libs.versions.minecraft.get(),
		"curseforge_id"					: curseforge_id,
		"modrinth_id"					: modrinth_id,

		"quilt_loader_version"          : libs.versions.quilt.loader.get(),
	]

	filesMatching(['*.mod.json', '*.mixins.json']) {
		expand expandProps
	}
	inputs.properties(expandProps)
}

java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
            vendor = JvmVendorSpec.MICROSOFT
        }
        withSourcesJar()
//        withJavadocJar()
    }

jar {
	from('LICENSE.md') {
		rename { "LICENSE_${base.archivesName.get()}.md" }
	}
}

sourcesJar {
	from('LICENSE.md') {
		rename { "LICENSE_${base.archivesName.get()}.md" }
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

// Disables Gradle's custom module metadata from being published to maven. The
// metadata includes mapped dependencies which are not reasonably consumable by
// other mod developers.
tasks.withType(GenerateModuleMetadata).configureEach {
	enabled = false
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId "${rootProject.name}-Quilt"
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_UPLOAD_URL) {
            maven {
                url = ENV.MAVEN_UPLOAD_URL
                credentials {
                    username = ENV.MAVEN_UPLOAD_USERNAME
                    password = ENV.MAVEN_UPLOAD_PASSWORD
                }
            }
        }
	}
}
